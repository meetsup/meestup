<style lang="less">
  @redColor:#a2313e;
  @grayColor:#F2F2F2;
  page{
    background-color: @grayColor;
  }
  .newActivityPage{
    position: relative;
    .flexSetting(@direction:row, @alignItem:center, @justify: flex-start) {
      display: flex;
      flex-direction: @direction;
      align-items: @alignItem;
      justify-content: @justify;
    }
    .blur(@blur){
      -webkit-filter: blur(@blur); /* Chrome, Opera */
      -moz-filter: blur(@blur);
      -ms-filter: blur(@blur);
      filter: blur(@blur);
    }

    .bottomBorder{
      border-bottom: 1px #e6e6e6 solid;
    }
    .bottomTop{
      margin-top: 20rpx;
    }
    .slideImage{
      width: 100%;
      .blur(2px)
    }
    .uploadView{
      width: 140rpx;
      height: 120rpx;
      margin-left: 305rpx;
      margin-top: 100rpx;
      position: absolute;
      .flexSetting(column,center,center);
      z-index: 4;
      text-align: center;
      font-size: 32rpx;
    }
    .cameraImg{
      width: 60rpx;
      height: 60rpx;
    }
    .mask {
      position: fixed;
      left: 0;
      top: 0;
      width: 100%;
      height: 250rpx;
      opacity: 0.3;
      background-color: #000000;
      z-index: 2;
    }
    .newItemContainer{
      background-color: #ffffff;
    }
    .newItemContainerHover{
      background-color: #CCCCCC;
    }
    .newItem{
      display: flex;
      align-items: center;
      padding:30rpx 0 30rpx 0;
      margin-left: 20rpx;
      font-size: 32rpx;
    }
    .bottomBorder{
      border-bottom: 1px @grayColor solid;
    }
    .newItemIcon{
      width: 64rpx;
      height: 64rpx;
    }
    .newItemText{
      margin-left: 20rpx;
    }
    .newItemTitle{
      margin-right: 20rpx;
    }
    .newItemInput{
      width: 100%;
    }
    .newItemTime{
      color: #808080;
      font-size: 32rpx;
    }
    .nowrap {
      white-space: nowrap;
    }
    .zhi{
      margin:0 20rpx 0 125rpx
    }
    .newItemDetail{
      background-color: #ffffff;
      height: 200rpx;
      padding: 30rpx 20rpx;
    }
    .marginTop{
      margin-top: 20rpx;
    }
    .location{
      margin: 0 20rpx;
      padding-bottom: 10rpx;
      .flexSetting(row,center,flex-start);
    }
    .locationImg{
      width: 40rpx;
      height: 40rpx;
    }
    .leftIcon {
      margin: -6rpx 24rpx;
      width: 17rpx;
      height: 17rpx;
      display: inline-block;
      -webkit-transform: rotate(-45deg);
      transform: rotate(-45deg);
      border: 4rpx solid #c7c7cc;
      border-left-width: 0;
      border-top-width: 0;
    }
    .newSelect{
      .flexSetting(row,center,space-between);
      padding:20rpx 0 20rpx 0;
      margin-left: 20rpx;
      margin-right: 20rpx;
      font-size: 32rpx;
    }
    .rowFlex{
      .flexSetting(row,center,flex-start);
    }
    .submitButton{
      .flexSetting(row,center,center);
      /*position: fixed;*/
      /*bottom: 0;*/
      width: 100%;
      height: 100rpx;
      font-size: 32rpx;
      color: #ffffff;
      background-color: @redColor;
    }
  }
</style>
<template>
  <view class="newActivityPage">
    <view style="margin-bottom: 100rpx">
      <view>
        <!--<view class="mask"></view>-->
        <view class="uploadView">
          <image class="cameraImg" src="../images/camera.png" catchtap="selectImage"></image>
          <text>上传图片</text>
        </view>
        <swiper indicator-dots="{{indicatorDots}}" autoplay="{{autoplay}}" interval="{{interval}}"
                duration="{{duration}}" circular="{{circular}}">
          <block wx:for="{{imagePath}}">
            <swiper-item catchtap="imageTap">
              <image src="{{item}}" class="slideImage" height="250rpx"/>
            </swiper-item>
          </block>
        </swiper>
      </view>
      <view class="newItemContainer">
        <view class="newItem bottomBorder">
          <view class="nowrap newItemTitle">主题</view>
          <input class="newItemInput" placeholder="活动主题"/>
        </view>
      </view>
      <view class="newItemContainer">
        <view class="newItem">
          <view class="nowrap newItemTitle">时间</view>
          <picker mode="date" value="2016-09-01" start="2015-09-01" end="2017-09-01" bindchange="bindDateChange">
            <view class="newItemTime">开始时间</view>
          </picker>
          <view class="nowrap zhi">至</view>
          <picker mode="date" value="2016-09-01" start="2015-09-01" end="2017-09-01" bindchange="bindDateChange">
            <view class="newItemTime">结束时间</view>
          </picker>
        </view>
      </view>
      <view class="newItemDetail marginTop">
        <view class="newItemTime">活动详情描述</view>
      </view>
      <view class="newItemContainer">
        <view class="location bottomBorder">
          <image class="locationImg" src="../images/location.png"></image>
          <view class="newItemTime">上海 闵行</view>
        </view>
      </view>
      <view class="newItemContainer">
        <view class="newItem">
          <view class="nowrap newItemTitle">详细地点</view>
          <input class="newItemInput" placeholder="活动详细地点"/>
        </view>
      </view>
      <view class="newItemContainer marginTop" hover-class="newItemContainerHover">
        <view class="newSelect">
          <view class="rowFlex">
            <image class="newItemIcon" src="../images/money.png"></image>
            <view class="newItemText">活动费用</view>
          </view>
          <view class="rowFlex">
            <view>免费</view>
            <view class="leftIcon"></view>
          </view>
        </view>
      </view>
      <view class="newItemContainer" hover-class="newItemContainerHover">
        <view class="newSelect">
          <view class="rowFlex">
            <image class="newItemIcon" src="../images/category2.png"></image>
            <view class="newItemText">活动类型</view>
          </view>
          <view class="rowFlex">
            <view>私人</view>
            <view class="leftIcon"></view>
          </view>
        </view>
      </view>
    </view>
    <view class="submitButton" catchtap="submitActivity">
      <text>发起活动</text>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class NewActvity extends wepy.page {
    config = {
      navigationBarTitleText: '新建活动'
    }
    components = {
    }
    data = {
      indicatorDots: true,
      autoplay: true,
      interval: 5000,
      duration: 1000,
      circular:true,
      imagePath:[]
    }

    computed = {
    }

    events = {
    }

    methods = {
      selectImage() {
        let _self = this;
        wx.chooseImage({
          count: 9, // 默认9
          sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
          sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
          success: function(res) {
            // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
            let tempFilePaths = res.tempFilePaths;
            _self.imagePath = _self.imagePath.concat(tempFilePaths);
            _self.$apply();
          }
        })
      },
      submitActivity() {
        let promiseArr = [];
        let len = this.imagePath.length;
        //添加图片上传的promise数组
        for (let i = 0; i < len; i++) {
          promiseArr.push(this.uploadImage(this.imagePath[i]))
        }
        Promise.all(promiseArr).then((result) => {
          console.log('result',result);
        })
      }
    }

    createActivity(){
      let requestData = {
        'activityid':'123',
        'activityname':'123',
        'activityplace':'123',
        'uploadpictures':'123',
        'starttime':'123',
        'endtime':'123',
        'phone':'123',
        'openid':'123',
        'fabulous':'123',
        'browsecount':'123',
        'isfree':'123',
        'isprivate':'123',
        'activitytag':'123',
        'type':'123',
        'detail':'123'
      }
      wx.fetch({
        data: requestData,
        method:'POST',
        url: wx.baseUrl + 'laiba/homepage/create'
      }).then((res) => {
        let resData = res.data.jsonData;
        console.log(resData);
      })
    }
    uploadImage(filePath){
      let promise = new Promise((resolve, reject) => {
        wx.uploadFile({
          url: wx.baseUrl + 'laiba/file/upload',
          filePath: filePath,
          name: 'file',
          success: function(res) {
            resolve({
              'FilePath': JSON.parse(res.data).jsonData.url.replace('http','https')
            });
          }
        })
      });
      return promise;
    }
    onLoad() {
    }
  }
</script>
