<style lang="less">
  @redColor:#a2313e;
  @grayColor:#F2F2F2;
  page{
    background-color: @grayColor;
    height: 100%;
  }
  .messagePage{
    .flexSetting(@direction:row, @alignItem:center, @justify: flex-start) {
      display: flex;
      flex-direction: @direction;
      align-items: @alignItem;
      justify-content: @justify;
    }
    height: 100%;
    .messageItem{
      position: relative;
      background-color: #ffffff;
      height: 130rpx;
      padding:40rpx 25rpx;
      border-bottom: 1rpx @grayColor solid;
      .flexSetting(row, center, flex-start);
    }
    .thumb{
      width: 140rpx;
      height: 130rpx;
    }
    .textBox{
      margin-left: 30rpx;
      font-size: 32rpx;
      height: 105rpx;
      .flexSetting(column, flex-start, space-between);
    }
    .messageItem:last-of-type{
      border-bottom: none;
    }
    .textDetail{
      width: 530rpx;
      color: #707070;
      font-size: 30rpx;
      line-height: 32rpx;
      white-space:nowrap;
      text-overflow:ellipsis; -o-text-overflow:ellipsis; overflow:hidden;
    }
    .time{
      color: #707070;
      position: absolute;
      top:30rpx;
      right:20rpx;
      font-size: 28rpx;
    }
    .messageItemHover{
      background-color: #CCCCCC;
    }
  }
</style>
<template>
  <view class="messagePage">
    <block wx:if="{{noData}}">
      <noData></noData>
    </block>
    <block wx:else>
      <view class="messageItem" hover-class="messageItemHover">
        <image class="thumb" src="{{src}}" mode="aspectFill"></image>
        <view class="textBox">
          <view class="time">2017-10-12</view>
          <view>消息通知</view>
          <view class="textDetail">消息通知注意查收消息通知注意查收,消息通知注意查收</view>
        </view>
      </view>
      <view class="messageItem" hover-class="messageItemHover">
        <image class="thumb" src="{{src}}" mode="aspectFill"></image>
        <view class="textBox">
          <view class="time">2017-10-12</view>
          <view>消息通知</view>
          <view class="textDetail">消息通知注意查收消息通知注意查收</view>
        </view>
      </view>
    </block>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import noData from '../components/nodata'

  export default class Message extends wepy.page {
    config = {
      navigationBarTitleText: '我的消息'
    }
    components = {
      noData:noData
    }
    data = {
      noData:false,
      src: '../images/thumb.png'
    }

    computed = {
    }

    methods = {
    }

    events = {
    }

    /**
     * 获取我的消息列表
     * 注意:任务类型分为三种
     * type1='修改用户信息',此时返回修改后的用户所有信息,包括待处理任务信息,
     * 待处理任务信息如下(id为待处理任务id,用于删除待处理任务或者标记已读,tasktype为待处理任务类型,此时为1,createtime为待处理任务创建时间,可用于排序),
     * type1只会返回一条最新的修改信息,其他信息忽略,标记为已删除的信息不会返回:  返回值的标记为"userPageList"
     *
     * type2='参加某个活动',具体返回信息如下,分为几个部分,标记为已删除的信息不会返回,返回值的标记为"joinActivityNewsList"
     *
       * type3='某某参加我的活动',标记为已删除的信息不会返回,返回值的标记为"joinMyActivityList",具体参考如下
     */
    myNewsAll(openId){
      let requestData = {
        'openId':openId
      }
      wx.fetch({
        data: requestData,
        method:'POST',
        url: wx.baseUrl + 'laiba/mynews/all'
      }).then((res) => {
        let resData = res.data.jsonData;
        console.log(resData);
      })
    }
    onLoad() {
      let openId = wx.getStorageSync('key')
      this.myNewsAll(openId);
    }
  }
</script>
